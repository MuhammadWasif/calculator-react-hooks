{"ast":null,"code":"import _slicedToArray from \"/media/wasif/D42487132486F82E/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/media/wasif/D42487132486F82E/app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        letter = _useState4[0],\n        setLetter = _useState4[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, eval(input)), React.createElement(\"button\", {\n    onClick: () => setInput(input + this.target.value),\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"1\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/media/wasif/D42487132486F82E/app/src/App.js"],"names":["React","useState","useEffect","App","input","setInput","letter","setLetter","eval","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA,oBAEaF,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,QAENG,KAFM;AAAA,QAECC,QAFD;;AAAA,qBAGeJ,QAAQ,CAAC,EAAD,CAHvB;AAAA;AAAA,QAGNK,MAHM;AAAA,QAGEC,SAHF;;AAKb,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAI,CAACJ,KAAD,CAAT,CADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,KAAKK,MAAL,CAAYC,KAArB,CAA/B;AAA4D,IAAA,KAAK,EAAC,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AAMD;;AAID,eAAeP,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [input, setInput] = useState('');\n  const [letter, setLetter] = useState('');\n\n  return(\n    <div>\n      <h1>{eval(input)}</h1>\n      <button onClick={() => setInput(input + this.target.value)} value=\"1\" >1</button>\n    </div>\n  )\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}